{"ast":null,"code":"var _jsxFileName = \"/Users/vladimirgromozdin/Documents/dev/kupipodariday-frontend/src/components/main-page/main-page.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Route, useRouteMatch, useLocation, Redirect } from \"react-router-dom\";\nimport { Collection } from \"../collection\";\nimport { Subheader } from \"./subheader\";\nimport { CollectionsView } from \"./collections-view\";\nimport { CardListView } from \"./card-lists-view\";\nimport { getLastCards, getOwnWishes, getTopCards } from \"../../utils/api\";\nimport { findOwnedIds } from \"../../utils/functions\";\nimport { UserContext } from \"../../utils/context\";\nimport styles from \"./main-page.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = _ref => {\n  _s();\n\n  let {\n    extraClass = \"\"\n  } = _ref;\n  const [user] = useContext(UserContext);\n  const [lastCards, setLastCards] = useState([]);\n  const [topCards, setTopCards] = useState([]);\n  const [ownWishes, setOwnWishes] = useState([]);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const location = useLocation();\n  const isLogin = !!user.id;\n  useEffect(() => {\n    Promise.all([getLastCards(), getTopCards(), getOwnWishes()]).then(_ref2 => {\n      let [last, top, ownWishes] = _ref2;\n      setLastCards(last);\n      setTopCards(top);\n      setOwnWishes(ownWishes);\n    });\n  }, []);\n  const ownedTopCardsIds = findOwnedIds(ownWishes, topCards);\n  const ownedLastCardsIds = findOwnedIds(ownWishes, lastCards);\n  const linePath = `${path}/line`;\n  const collectionsPath = `${path}/collections`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content} ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(Subheader, {\n      path: path,\n      location: location,\n      isLogin: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: linePath,\n      render: () => /*#__PURE__*/_jsxDEV(CardListView, {\n        lastCards: lastCards,\n        topCards: topCards,\n        isLogin: isLogin,\n        ownedTopCards: ownedTopCardsIds,\n        ownedLastCards: ownedLastCardsIds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: collectionsPath,\n      render: () => /*#__PURE__*/_jsxDEV(CollectionsView, {\n        url: url,\n        ownWishes: ownWishes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/collections/:id`,\n      render: () => /*#__PURE__*/_jsxDEV(Collection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"rNtKzdEGaAqzafF4oLLIANS4O18=\", false, function () {\n  return [useRouteMatch, useLocation];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/vladimirgromozdin/Documents/dev/kupipodariday-frontend/src/components/main-page/main-page.jsx"],"names":["useState","useEffect","useContext","Route","useRouteMatch","useLocation","Redirect","Collection","Subheader","CollectionsView","CardListView","getLastCards","getOwnWishes","getTopCards","findOwnedIds","UserContext","styles","MainPage","extraClass","user","lastCards","setLastCards","topCards","setTopCards","ownWishes","setOwnWishes","path","url","location","isLogin","id","Promise","all","then","last","top","ownedTopCardsIds","ownedLastCardsIds","linePath","collectionsPath","content"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,kBAA5D;AAEA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,QAAwD,iBAAxD;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,UAAU,GAAG;AAAf,GAAwB;AAC/C,QAAM,CAACC,IAAD,IAASjB,UAAU,CAACa,WAAD,CAAzB;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM;AAAE0B,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBvB,aAAa,EAAnC;AACA,QAAMwB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,OAAO,GAAG,CAAC,CAACV,IAAI,CAACW,EAAvB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACrB,YAAY,EAAb,EAAiBE,WAAW,EAA5B,EAAgCD,YAAY,EAA5C,CAAZ,EAA6DqB,IAA7D,CACE,SAA4B;AAAA,UAA3B,CAACC,IAAD,EAAOC,GAAP,EAAYX,SAAZ,CAA2B;AAC1BH,MAAAA,YAAY,CAACa,IAAD,CAAZ;AACAX,MAAAA,WAAW,CAACY,GAAD,CAAX;AACAV,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KALH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMY,gBAAgB,GAAGtB,YAAY,CAACU,SAAD,EAAYF,QAAZ,CAArC;AACA,QAAMe,iBAAiB,GAAGvB,YAAY,CAACU,SAAD,EAAYJ,SAAZ,CAAtC;AAEA,QAAMkB,QAAQ,GAAI,GAAEZ,IAAK,OAAzB;AACA,QAAMa,eAAe,GAAI,GAAEb,IAAK,cAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEV,MAAM,CAACwB,OAAQ,IAAGtB,UAAW,EAAhD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEQ,IAAjB;AAAuB,MAAA,QAAQ,EAAEE,QAAjC;AAA2C,MAAA,OAAO,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,IAAI,EAAES,QADR;AAEE,MAAA,MAAM,EAAE,mBACN,QAAC,YAAD;AACE,QAAA,SAAS,EAAElB,SADb;AAEE,QAAA,QAAQ,EAAEE,QAFZ;AAGE,QAAA,OAAO,EAAEO,OAHX;AAIE,QAAA,aAAa,EAAEO,gBAJjB;AAKE,QAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAEE,eAFR;AAGE,MAAA,MAAM,EAAE,mBAAM,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAEZ,GAAtB;AAA2B,QAAA,SAAS,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA;AAHhB;AAAA;AAAA;AAAA;AAAA,YAdF,eAmBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,IAAK,kBAArB;AAAwC,MAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAjDM;;GAAMT,Q;UAMWb,a,EACLC,W;;;KAPNY,Q","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Route, useRouteMatch, useLocation, Redirect } from \"react-router-dom\";\n\nimport { Collection } from \"../collection\";\nimport { Subheader } from \"./subheader\";\nimport { CollectionsView } from \"./collections-view\";\nimport { CardListView } from \"./card-lists-view\";\n\nimport { getLastCards, getOwnWishes, getTopCards } from \"../../utils/api\";\nimport { findOwnedIds } from \"../../utils/functions\";\nimport { UserContext } from \"../../utils/context\";\n\nimport styles from \"./main-page.module.css\";\n\nexport const MainPage = ({ extraClass = \"\" }) => {\n  const [user] = useContext(UserContext);\n  const [lastCards, setLastCards] = useState([]);\n  const [topCards, setTopCards] = useState([]);\n  const [ownWishes, setOwnWishes] = useState([]);\n\n  const { path, url } = useRouteMatch();\n  const location = useLocation();\n  const isLogin = !!user.id;\n\n  useEffect(() => {\n    Promise.all([getLastCards(), getTopCards(), getOwnWishes()]).then(\n      ([last, top, ownWishes]) => {\n        setLastCards(last);\n        setTopCards(top);\n        setOwnWishes(ownWishes);\n      }\n    );\n  }, []);\n\n  const ownedTopCardsIds = findOwnedIds(ownWishes, topCards);\n  const ownedLastCardsIds = findOwnedIds(ownWishes, lastCards);\n\n  const linePath = `${path}/line`;\n  const collectionsPath = `${path}/collections`;\n\n  return (\n    <div className={`${styles.content} ${extraClass}`}>\n      <Subheader path={path} location={location} isLogin={isLogin} />\n      <Route\n        path={linePath}\n        render={() => (\n          <CardListView\n            lastCards={lastCards}\n            topCards={topCards}\n            isLogin={isLogin}\n            ownedTopCards={ownedTopCardsIds}\n            ownedLastCards={ownedLastCardsIds}\n          />\n        )}\n      />\n      <Route\n        exact\n        path={collectionsPath}\n        render={() => <CollectionsView url={url} ownWishes={ownWishes} />}\n      />\n      <Route path={`${path}/collections/:id`} render={() => <Collection />} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}