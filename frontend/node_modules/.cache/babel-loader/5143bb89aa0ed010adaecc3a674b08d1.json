{"ast":null,"code":"var _jsxFileName = \"/Users/vladimirgromozdin/Documents/dev/kupipodariday-frontend/src/components/user-page/user-page.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ButtonReturn } from \"../ui\";\nimport { GoodCard } from \"../good-card\";\nimport { getAnotherUser, getAnotherUserWishes, getOwnWishes } from \"../../utils/api\";\nimport { findOwnedIds } from \"../../utils/functions\";\nimport styles from \"./user-page.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserPage = _ref => {\n  _s();\n\n  let {\n    extraClass = \"\"\n  } = _ref;\n  const [anotherUser, setAnotherUser] = useState({});\n  const [anotherUserWishes, setAnotherUserWishes] = useState([]);\n  const [myWishes, setMyWishes] = useState([]);\n  const alreadyOwnWishesId = findOwnedIds(myWishes, anotherUserWishes);\n  const {\n    username\n  } = useParams();\n  useEffect(() => {\n    if (!username) return;\n    Promise.all([getAnotherUserWishes(username), getAnotherUser(username), getOwnWishes()]).then(values => {\n      const [wishes, profileInfo, myWishes] = values;\n      setAnotherUser(profileInfo);\n      setAnotherUserWishes(wishes);\n      setMyWishes(myWishes);\n    });\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${styles.content} ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(ButtonReturn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `text text_type_h1 text_color_primary mb-16 ${styles.title}`,\n      children: `Пользователь: ${anotherUser === null || anotherUser === void 0 ? void 0 : anotherUser.username} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text text_type_main text_color_primary mb-16 ${styles.description}`,\n      children: `Обо мне: ${(anotherUser === null || anotherUser === void 0 ? void 0 : anotherUser.about) || \"ничего неизвестно\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cards,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text text_type_h2 text_color_primary ${styles.title}`,\n        children: \"\\u0412\\u0438\\u0448\\u043B\\u0438\\u0441\\u0442 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards_box,\n        children: anotherUserWishes === null || anotherUserWishes === void 0 ? void 0 : anotherUserWishes.map(_ref2 => {\n          let {\n            price,\n            name,\n            raised,\n            image,\n            link,\n            id\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(GoodCard, {\n            id: id,\n            price: price,\n            name: name,\n            current: raised,\n            img: image,\n            link: link,\n            isOwn: alreadyOwnWishesId.includes(id)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPage, \"U8nrJSM3Sb+F1jZbsCLb0Rik4XY=\", false, function () {\n  return [useParams];\n});\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/vladimirgromozdin/Documents/dev/kupipodariday-frontend/src/components/user-page/user-page.jsx"],"names":["useState","useEffect","useParams","ButtonReturn","GoodCard","getAnotherUser","getAnotherUserWishes","getOwnWishes","findOwnedIds","styles","UserPage","extraClass","anotherUser","setAnotherUser","anotherUserWishes","setAnotherUserWishes","myWishes","setMyWishes","alreadyOwnWishesId","username","Promise","all","then","values","wishes","profileInfo","content","title","description","about","cards","cards_box","map","price","name","raised","image","link","id","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { ButtonReturn } from \"../ui\";\nimport { GoodCard } from \"../good-card\";\n\nimport {\n  getAnotherUser,\n  getAnotherUserWishes,\n  getOwnWishes,\n} from \"../../utils/api\";\n\nimport { findOwnedIds } from \"../../utils/functions\";\n\nimport styles from \"./user-page.module.css\";\n\nexport const UserPage = ({ extraClass = \"\" }) => {\n  const [anotherUser, setAnotherUser] = useState({});\n  const [anotherUserWishes, setAnotherUserWishes] = useState([]);\n  const [myWishes, setMyWishes] = useState([]);\n\n  const alreadyOwnWishesId = findOwnedIds(myWishes, anotherUserWishes);\n\n  const { username } = useParams();\n\n  useEffect(() => {\n    if (!username) return;\n    Promise.all([\n      getAnotherUserWishes(username),\n      getAnotherUser(username),\n      getOwnWishes(),\n    ]).then((values) => {\n      const [wishes, profileInfo, myWishes] = values;\n      setAnotherUser(profileInfo);\n      setAnotherUserWishes(wishes);\n      setMyWishes(myWishes);\n    });\n  }, [username]);\n\n  return (\n    <section className={`${styles.content} ${extraClass}`}>\n      <ButtonReturn />\n      <h1\n        className={`text text_type_h1 text_color_primary mb-16 ${styles.title}`}\n      >\n        {`Пользователь: ${anotherUser?.username} `}\n      </h1>\n\n      <p\n        className={`text text_type_main text_color_primary mb-16 ${styles.description}`}\n      >\n        {`Обо мне: ${anotherUser?.about || \"ничего неизвестно\"}`}\n      </p>\n      <div className={styles.cards}>\n        <h2 className={`text text_type_h2 text_color_primary ${styles.title}`}>\n          Вишлист пользователя:\n        </h2>\n        <div className={styles.cards_box}>\n          {anotherUserWishes?.map(\n            ({ price, name, raised, image, link, id }) => {\n              return (\n                <GoodCard\n                  key={id}\n                  id={id}\n                  price={price}\n                  name={name}\n                  current={raised}\n                  img={image}\n                  link={link}\n                  isOwn={alreadyOwnWishesId.includes(id)}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}