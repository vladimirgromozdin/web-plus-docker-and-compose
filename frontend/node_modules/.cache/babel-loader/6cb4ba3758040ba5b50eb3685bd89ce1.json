{"ast":null,"code":"import _slicedToArray from\"/Users/vladimirgromozdin/Documents/dev/deploy-kupipodariday/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext}from\"react\";import{GoodCard}from\"../good-card\";import{UserContext}from\"../../utils/context\";import styles from\"./main-page.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var CardListView=function CardListView(_ref){var lastCards=_ref.lastCards,topCards=_ref.topCards,isLogin=_ref.isLogin,ownedTopCards=_ref.ownedTopCards,ownedLastCards=_ref.ownedLastCards;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:styles.box,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text text_type_h2 text_color_primary mb-16\",children:\"\\u041D\\u0435\\u0434\\u0430\\u0432\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.cards_box,children:lastCards&&/*#__PURE__*/_jsx(GoodCardList,{cards:lastCards,isLogin:isLogin,ownedIds:ownedLastCards})})]}),/*#__PURE__*/_jsxs(\"section\",{className:styles.box,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text text_type_h2 text_color_primary mb-16\",children:\"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u043D\\u044B\\u0435\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.cards_box,children:topCards&&/*#__PURE__*/_jsx(GoodCardList,{cards:topCards,isLogin:isLogin,ownedIds:ownedTopCards})})]})]});};var GoodCardList=function GoodCardList(_ref2){var cards=_ref2.cards,isLogin=_ref2.isLogin,ownedIds=_ref2.ownedIds;var _useContext=useContext(UserContext),_useContext2=_slicedToArray(_useContext,1),user=_useContext2[0];return cards.map(function(cardInfo){var name=cardInfo.name,price=cardInfo.price,raised=cardInfo.raised,image=cardInfo.image,id=cardInfo.id;var key=\"\".concat(user.id).concat(id);var isOwned=ownedIds.includes(id);return/*#__PURE__*/_jsx(GoodCard,{id:id,isLogin:isLogin,price:price,name:name,current:raised,img:image,isOwn:isOwned},key);});};","map":{"version":3,"sources":["/Users/vladimirgromozdin/Documents/dev/deploy-kupipodariday/frontend/src/components/main-page/card-lists-view.jsx"],"names":["useContext","GoodCard","UserContext","styles","CardListView","lastCards","topCards","isLogin","ownedTopCards","ownedLastCards","box","cards_box","GoodCardList","cards","ownedIds","user","map","cardInfo","name","price","raised","image","id","key","isOwned","includes"],"mappings":"0JAAA,OAASA,UAAT,KAA2B,OAA3B,CAEA,OAASC,QAAT,KAAyB,cAAzB,CAEA,OAASC,WAAT,KAA4B,qBAA5B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,6IAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAMtB,IALJC,CAAAA,SAKI,MALJA,SAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,cACI,MADJA,cACI,CACJ,mBACE,wCACE,iBAAS,SAAS,CAAEN,MAAM,CAACO,GAA3B,wBACE,WAAI,SAAS,CAAC,4CAAd,2HADF,cAIE,YAAK,SAAS,CAAEP,MAAM,CAACQ,SAAvB,UACGN,SAAS,eACR,KAAC,YAAD,EACE,KAAK,CAAEA,SADT,CAEE,OAAO,CAAEE,OAFX,CAGE,QAAQ,CAAEE,cAHZ,EAFJ,EAJF,GADF,cAeE,iBAAS,SAAS,CAAEN,MAAM,CAACO,GAA3B,wBACE,WAAI,SAAS,CAAC,4CAAd,0EADF,cAIE,YAAK,SAAS,CAAEP,MAAM,CAACQ,SAAvB,UACGL,QAAQ,eACP,KAAC,YAAD,EACE,KAAK,CAAEA,QADT,CAEE,OAAO,CAAEC,OAFX,CAGE,QAAQ,CAAEC,aAHZ,EAFJ,EAJF,GAfF,GADF,CAgCD,CAvCM,CAyCP,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAkC,IAA/BC,CAAAA,KAA+B,OAA/BA,KAA+B,CAAxBN,OAAwB,OAAxBA,OAAwB,CAAfO,QAAe,OAAfA,QAAe,CACrD,gBAAed,UAAU,CAACE,WAAD,CAAzB,4CAAOa,IAAP,iBAEA,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAU,SAACC,QAAD,CAAc,CAC7B,GAAQC,CAAAA,IAAR,CAA2CD,QAA3C,CAAQC,IAAR,CAAcC,KAAd,CAA2CF,QAA3C,CAAcE,KAAd,CAAqBC,MAArB,CAA2CH,QAA3C,CAAqBG,MAArB,CAA6BC,KAA7B,CAA2CJ,QAA3C,CAA6BI,KAA7B,CAAoCC,EAApC,CAA2CL,QAA3C,CAAoCK,EAApC,CACA,GAAMC,CAAAA,GAAG,WAAMR,IAAI,CAACO,EAAX,SAAgBA,EAAhB,CAAT,CACA,GAAME,CAAAA,OAAO,CAAGV,QAAQ,CAACW,QAAT,CAAkBH,EAAlB,CAAhB,CAEA,mBACE,KAAC,QAAD,EACE,EAAE,CAAEA,EADN,CAGE,OAAO,CAAEf,OAHX,CAIE,KAAK,CAAEY,KAJT,CAKE,IAAI,CAAED,IALR,CAME,OAAO,CAAEE,MANX,CAOE,GAAG,CAAEC,KAPP,CAQE,KAAK,CAAEG,OART,EAEOD,GAFP,CADF,CAYD,CAjBM,CAAP,CAkBD,CArBD","sourcesContent":["import { useContext } from \"react\";\n\nimport { GoodCard } from \"../good-card\";\n\nimport { UserContext } from \"../../utils/context\";\n\nimport styles from \"./main-page.module.css\";\n\nexport const CardListView = ({\n  lastCards,\n  topCards,\n  isLogin,\n  ownedTopCards,\n  ownedLastCards,\n}) => {\n  return (\n    <>\n      <section className={styles.box}>\n        <h2 className=\"text text_type_h2 text_color_primary mb-16\">\n          Недавно добавленные\n        </h2>\n        <div className={styles.cards_box}>\n          {lastCards && (\n            <GoodCardList\n              cards={lastCards}\n              isLogin={isLogin}\n              ownedIds={ownedLastCards}\n            />\n          )}\n        </div>\n      </section>\n      <section className={styles.box}>\n        <h2 className=\"text text_type_h2 text_color_primary mb-16\">\n          Популярные\n        </h2>\n        <div className={styles.cards_box}>\n          {topCards && (\n            <GoodCardList\n              cards={topCards}\n              isLogin={isLogin}\n              ownedIds={ownedTopCards}\n            />\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst GoodCardList = ({ cards, isLogin, ownedIds }) => {\n  const [user] = useContext(UserContext);\n\n  return cards.map((cardInfo) => {\n    const { name, price, raised, image, id } = cardInfo;\n    const key = `${user.id}${id}`;\n    const isOwned = ownedIds.includes(id);\n\n    return (\n      <GoodCard\n        id={id}\n        key={key}\n        isLogin={isLogin}\n        price={price}\n        name={name}\n        current={raised}\n        img={image}\n        isOwn={isOwned}\n      />\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}